factor(rep(1:3, length = n), levels = 1:2)
table(fac)
tapply(1:n, fac, sum)
#cheaper diamonds
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
tapply(1:3, ind) #-> the split vector
tapply(1:3, ind, sum)
ind
ind[[1]]
ind[[1]][1]
table(ind)
tapply(1:3, ind)
by(as.factor(diamonds$cut), diamonds$price, max)
tapply(diamonds$price, diamonds$cut, max)
names(diamonds)
tapply(diamonds$price, diamonds$cut+diamonds$color, max)
tapply(diamonds$price,c(diamonds$cut,diamonds$color), max)
?by
by(diamonds$price, diamonds$cut, max)
tapply(diamonds$price, diamonds$cut, max)
tapply(diamonds$price, diamonds$cut, min)
tapply(diamonds$price, diamonds$cut, median)
min(tapply(diamonds$price, diamonds$cut, median))
min(by(diamonds$price, diamonds$cut, median))
class(tapply(diamonds$price, diamonds$cut, median))
m<- tapply(diamonds$price, diamonds$cut, median)
m[1]
m[1].value
str(m[1])
class(m[1])
names(m[1])
m[m=min(m)]
min(m)
m[m==min(m)]
m <- tapply(diamonds$price, diamonds$cut, median)
m[m==min(m)]
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale=free)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale="free")+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale_y="free")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales_y="free")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
#facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
#scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=4,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")+
theme(strip.text.x = element_text(size=8, angle=75),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")+
theme(strip.text.x = element_text(size=8, angle=0),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
#scale_x_continuous(limits=c(300,18825))+
scale_x_log10()+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
#scale_x_continuous(limits=c(300,18825))+
scale_x_log10()
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
#scale_x_log10()+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_boxplot()
ggplot(aes(y = price), data=diamonds, )+
geom_boxplot()
?geom_boxplot
ggplot(aes(price), data=diamonds, )+
geom_boxplot()
?geom_boxplot
ggplot(data=diamonds, aes(factor(cut)), price  )+
geom_boxplot()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot()+
geom_jitter()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T)
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "green", outlier.size = 3)
# Price Box Plots
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3)
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,color=aes(fill = cyl))
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,colour=aes(fill = cyl))
#geom_jitter()
# Price Box Plots
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = cyl))
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = price))
#geom_jitter()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = cut))
#geom_jitter()
# Price Box Plots
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
facet_wrap(~color, nrow=5,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=5,scales="free_y")
# Price Box Plots
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=7,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
tapply(diamonds$price, diamonds$color, summary)
tapply(diamonds$price, diamonds$color, IQR)
ggplot(data=diamonds, aes(factor(color), price/carat))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=7,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price/carat))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly()
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_y_log10()
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=100)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10000)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
summary(diamonds$carat)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly()+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.25)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.5)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
subset(diamonds, diamonds$carat < 2)
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.001)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.005)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson3');
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
qplot(x = age, y = friend_count, data = pf);
names(pf)
head(subset(pf,,select=c(age,dob_month)))
b <- head(subset(pf,,select=c(age,dob_month)))
b
b$age+b$dob_month/12
pf$age_with_months <- pf$age+pf+dob_month/12
pf$age_with_months <- pf$age+pf$dob_month/12
pf$age_with_months <- pf$age+(pf$dob_month-12)/12
b
b$age+(b$dob_month-12)/12
b$age+(b$dob_month)/12
b$age+(b$dob_month-12+1)/12
b$age+(12-b$dob_month)/12
?arrange
library('dplyr')
age_groups <- group_by(pf, age_with_months)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age
pf.fc_by_age <- arrange(pf.fc_by_age, age_with_months)
pf.fc_by_age
age_groups <- group_by(pf, age_with_months)
head(age_groups)
pf$age_with_months
library('dplyr')
age_groups <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months <- arrange(pf.fc_by_age_months, age_with_months)
head(pf.fc_by_age_months)
names(pf.fc_by_age_months)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = pf.fc_by_age_months)+
geom_point()+ geom_line()
xlim(0,71)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = pf.fc_by_age_months)+
geom_point()+ geom_line(color='red')
xlim(0,71)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = pf.fc_by_age_months)+
#geom_point()+
geom_line(color='red')+
xlim(0,71)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months<71))+
#geom_point()+
geom_line(color='red')
library(ggplot2)
names(diamonds)
ggplot(aes(x=x, y=price), data=diamonds)+
geom_point()
ggplot(aes(x=x, y=price), data=subset(diamonds, x > 0 )+
geom_point()
ggplot(aes(x=x, y=price), data=subset(diamonds, x > 0 )+
geom_point()
summary(diamonds$x)
quantile(diamonds$x, probs=0.05)
quantile(diamonds$x, probs=0.01)
quantile(diamonds$x, probs=0.001)
quantile(diamonds$x, probs=0.0001)
quantile(diamonds$x, probs=0.005)
quantile(diamonds$x, probs=0.0025)
quantile(diamonds$x, probs=0.00125)
quantile(diamonds$x, probs=0.000125)
ggplot(aes(x=x, y=price), data=subset(diamonds, x > 0 ))+
geom_point()
with(diamonds, cor.test(x,price))
with(diamonds, cor.test(y,price))
with(diamonds, cor.test(z,price))
names(diamonds)
ggplot(aes(x=depth, y=price), data=diamonds+
geom_point()
ggplot(aes(x=depth, y=price), data=diamonds)+
geom_point()
#price vs. depth
ggplot(aes(x=depth, y=price), data=diamonds)+
geom_point()
ggplot(aes(x=depth, y=price), data=diamonds)+
geom_point()+xlim(55,65)
ggplot(aes(x=depth, y=price), data=diamonds)+
geom_point(alpha = 1/100, )+
scale_x_continuous(breaks=seq(min(diamonds$depth), max(diamonds$depth)),2)
cor.test(diamonds$depth, diamonds$price)
ggplot(aes(x=carat, y=price), data=diamonds)+
geom_point(alpha = 1/100, )
ggplot(aes(x=depth, y=price), data=diamonds)+
geom_point(alpha = 1/100, )+
scale_x_continuous(breaks=seq(min(diamonds$carat), max(diamonds$carat)),0.1)
ggplot(aes(x=carat, y=price), data=diamonds)+
geom_point(alpha = 1/100, )+
scale_x_continuous(breaks=seq(min(diamonds$carat), max(diamonds$carat)),0.1)
ggplot(aes(x=carat, y=price), data=diamonds)+
geom_point(alpha = 1/100, )+
scale_x_continuous(breaks=seq(min(diamonds$carat), max(diamonds$carat)),0.1)+
xlim(0.2,2.2)
ggplot(aes(x=carat, y=price), data=diamonds)+
geom_point(alpha = 5/100, )+
scale_x_continuous(breaks=seq(min(diamonds$carat), max(diamonds$carat)),0.1)+
xlim(0.2,2.2)
diamonds$volume <- diamonds$x * diamonds$y * diamonds*z;
diamonds$volume <- diamonds$x * diamonds$y * diamonds*z;
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z;
ggplot(aes(x=volume, y=price), data=diamonds)+
geom_point(alpha = 5/100)
ggplot(aes(x=volume, y=price), data=diamonds)+
geom_point(alpha = 5/100)+
+xlim(0,500)
ggplot(aes(x=volume, y=price), data=diamonds)+
geom_point(alpha = 5/100)+
xlim(0,500)
subset(diamonds, volume > 0 & volume < 800 )
with(subset(diamonds, volume > 0 & volume < 800 ), cor.test(diamonds$price, diamonds$volume ))
with(subset(diamonds, volume > 0 & volume < 800 ), cor.test(price, volume ))
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm')
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm', formula= y~x, size=1)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm', formula= y~x*x, size=1)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 && volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm', formula= y~x*x, size=1)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm', formula= y~x*x, size=1)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm', formula= y ~ x, size=5)
ggplot(aes(x=volume, y=price), data=subset(diamonds, volume > 0 & volume < 800 ))+
geom_point(alpha = 5/100)+
geom_smooth(method='lm', formula= y ~ x, size=1)+ geom_smooth()
library(dplyr)
library(dplyr)
clarity_groups <- group_by(diamonds, clarity)
diamondsClarity <- summarise(clarity_groups,
clarity_mean = mean(clarity),
clarity_median = median(clarity),
clarity_min = min(clarity),
clarity_max = max(clarity),
n = n())
diamondsClarity <- summarise(clarity_groups,
clarity_mean = mean(price),
clarity_median = median(price),
clarity_min = min(price),
clarity_max = max(price),
n = n())
head(diamondsClarity)
clarity_groups <- group_by(diamonds, clarity)
diamondsByClarity <- summarise(clarity_groups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
names(diamonds_mp_by_clarity)
ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()
p1 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()
library(gridExtra)
installed.packages('gridExtra')
library(gridExtra)
installed.packages('gridExtra')
library(gridExtra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()
p1 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()+geom_line(color='red')
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()+geom_line(color='blue')
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()+geom_line(color='red')
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()+geom_line(color='blue')
p1
grid.arrange(p1,p2, ncol=2)
rm(p1)
rm(p2)
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()+geom_line(color='red')
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()+geom_line(color='blue')
p1
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_histogram()
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_histogram()
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
p1
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_point()+geom_line(color='red')
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_point()+geom_line(color='blue')
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(aes(x=clarity, y= mean_price), data=diamonds_mp_by_clarity)+
geom_bar()#+geom_line(color='red')
p2 <- ggplot(aes(x=color, y= mean_price), data=diamonds_mp_by_color)+
geom_bar()#+geom_line(color='blue')
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
ggplot(aes(mean_price), data=diamonds_mp_by_clarity)+
geom_bar()
ggplot(aes(mean_price), data=diamonds_mp_by_clarity)+
geom_bar(fill="white", colour="darkgreen")
ggplot(aes(clariry), data=diamonds_mp_by_clarity)+
geom_bar(fill="white", colour="darkgreen")
ggplot(aes(mean_price), data=diamonds_mp_by_clarity)+
geom_bar(fill="white", colour="darkgreen")
p1 <- ggplot(aes(mean_price), data=diamonds_mp_by_clarity)+
geom_bar(fill="white", colour="darkgreen")
p2 <- ggplot(aes(mean_price), data=diamonds_mp_by_color)+
geom_bar(fill="blue", colour="darkgreen")
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(aes(mean_price), data=diamonds_mp_by_clarity)+
geom_bar(fill="white", colour="darkgreen")
p2 <- ggplot(aes(mean_price), data=diamonds_mp_by_color)+
geom_bar(fill="white", colour="darkred")
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
ggplot(diamonds_mp_by_clarity,aes(x=factor(clarity),y=mean_price))+
geom_bar(stat="identity")
ggplot(aes(x = factor(color)), data=diamonds_mp_by_color)+
geom_bar(fill="white", colour="darkred")
names(diamonds)
p2 <- ggplot(aes(x = factor(color)), data=diamonds_mp_by_color)+
geom_bar(fill="white", colour="darkred", stat="identity")
p2
names(diamonds_mp_by_clarity)
ggplot(aes(x = factor(color), y = mean_price), data=diamonds_mp_by_color)+
geom_bar(fill="white", colour="darkred", stat="identity")
p1<-ggplot(diamonds_mp_by_clarity,aes(x=factor(clarity),y=mean_price))+
geom_bar(stat="identity")
p2 <- ggplot(aes(x = factor(color), y = mean_price), data=diamonds_mp_by_color)+
geom_bar(fill="white", colour="darkred", stat="identity")
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
p1<-ggplot(diamonds_mp_by_clarity,aes(x=factor(clarity),y=mean_price))+
geom_bar(fill="white", colour="darkgreen",stat="identity")
p2 <- ggplot(aes(x = factor(color), y = mean_price), data=diamonds_mp_by_color)+
geom_bar(fill="white", colour="darkred", stat="identity")
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
