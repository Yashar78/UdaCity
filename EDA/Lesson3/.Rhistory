diamonds.size()
size(diamonds)
dim(diamonds)
factor(diamonds)
summary(diamonds)
class(names(diamonds))
??factor
status <- c("Lo", "Hi", "Med", "Med", "Hi")
ordered.status <- factor(status, levels=c("Lo", "Med", "Hi"), ordered=TRUE)
table(status)
table(ordered.status)
table(diamonds)
names(ordere.status)
names(ordered.status)
class(ordered.status)
class(status)
names(diamonds)
class(diamonds$cut)
str(diamonds)
cols <- names(diamonds)
lapply(cols,class)
length(names(diamonds))
lapply(diamons,class)
lapply(diamonds,class)
sum(lapply(diamonds,class)=='"ordered" "factor"')
sum(lapply(diamonds,class)=="numeric")
sum(lapply(diamonds,class)=="\"ordered\" \"factor\"")
sum(lapply(diamonds,class)=='\"ordered\" \"factor\"')
sum(lapply(diamonds,class)=='"ordered" "factor"')
sum(lapply(diamonds,class)=="\"ordered\" \"factor\"")
sum(lapply(diamonds,class)=="\\"ordered\\" \\"factor\\"")
lapply(diamonds,class)
class(lapply(diamonds,class))
c <- (lapply(diamonds,class))
c
c
sc <- (lapply(diamonds,class))
sc
sc[1]
class(sc[1])
lapply(diamonds,class)
names(diamonds)
lapply(diamonds,class)
table(diamonds$color)
names(diamonds)
qplot(x = color, y=price, data =subset(diamons, !is.na(color)),
geom = 'boxplot')+scale_y_continuous()
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous()
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(0,10000))
lapply(diamonds,class)
?table
table(diamonds$color, diamonds$clarity)
max(table(diamonds$color, diamonds$clarity))
summary(diamonds)
names(diamonds)
str(diamonds)
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')
qplot(x = color, y=price, data =subset(diamonds),
geom = 'boxplot')+scale_y_continuous(lim=c(0,10000))
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9')
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(0,1000))
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(0,1000))
ph
#price histogram
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,1000))
ph
#price histogram
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous()
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=500)+
scale_x_continuous()
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous()
ph
summary(diamonds$price)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
min(diamonds4price)
min(diamonds$price)
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(300,10000))
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(325,))
ph
max(diamonds$price)
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(325,18825))
ph
min(diamonds$price)
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(326,18825))
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))
ph
sum(diamonds$price >= 15000)
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1250))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(500,1250))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1250))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=1)+
scale_x_continuous(limits=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=2)+
scale_x_continuous(limits=c(300,100))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,100))
ggplot(aes(x = price), data=diamonds)
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,100))
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
#what color represents the best diamonds based on price
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(300,10000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(lim=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(lim=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=1)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(400,1000))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(400,1100))
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_grid(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_grid(~cut, ncol=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
library(ggplot2)
library(stats)
library(knitr)
dim(diamonds)
#show the list of types for each column
lapply(diamonds,class)
#what color represents the best diamonds based on price
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(300,10000))
#price histogram
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))
ph
summary(diamonds$price)
## Diamond counts
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(400,1100))
#price by cut hist
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
names(diamonds)
max(diamonds$price)
max(diamonds$price, by = diamonds$cut)
?by
by(diamonds, cut, max)
by(diamonds, cut, max)
by(diamonds, diamonds$cut, max)
by(diamonds, cut, max)
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
rep(1:3, length = n
rep(1:3, length = n)
rep(1:3, length = n)
factor(rep(1:3, length = n), levels = 1:5)
factor(rep(1:3, length = n), levels = 1:2)
table(fac)
tapply(1:n, fac, sum)
#cheaper diamonds
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
tapply(1:3, ind) #-> the split vector
tapply(1:3, ind, sum)
ind
ind[[1]]
ind[[1]][1]
table(ind)
tapply(1:3, ind)
by(as.factor(diamonds$cut), diamonds$price, max)
tapply(diamonds$price, diamonds$cut, max)
names(diamonds)
tapply(diamonds$price, diamonds$cut+diamonds$color, max)
tapply(diamonds$price,c(diamonds$cut,diamonds$color), max)
?by
by(diamonds$price, diamonds$cut, max)
tapply(diamonds$price, diamonds$cut, max)
tapply(diamonds$price, diamonds$cut, min)
tapply(diamonds$price, diamonds$cut, median)
min(tapply(diamonds$price, diamonds$cut, median))
min(by(diamonds$price, diamonds$cut, median))
class(tapply(diamonds$price, diamonds$cut, median))
m<- tapply(diamonds$price, diamonds$cut, median)
m[1]
m[1].value
str(m[1])
class(m[1])
names(m[1])
m[m=min(m)]
min(m)
m[m==min(m)]
m <- tapply(diamonds$price, diamonds$cut, median)
m[m==min(m)]
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale=free)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale="free")+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale_y="free")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales_y="free")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
#facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
#scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=4,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")+
theme(strip.text.x = element_text(size=8, angle=75),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")+
theme(strip.text.x = element_text(size=8, angle=0),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
#scale_x_continuous(limits=c(300,18825))+
scale_x_log10()+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
#scale_x_continuous(limits=c(300,18825))+
scale_x_log10()
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
#scale_x_log10()+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_boxplot()
ggplot(aes(y = price), data=diamonds, )+
geom_boxplot()
?geom_boxplot
ggplot(aes(price), data=diamonds, )+
geom_boxplot()
?geom_boxplot
ggplot(data=diamonds, aes(factor(cut)), price  )+
geom_boxplot()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot()+
geom_jitter()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T)
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "green", outlier.size = 3)
# Price Box Plots
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3)
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,color=aes(fill = cyl))
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,colour=aes(fill = cyl))
#geom_jitter()
# Price Box Plots
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = cyl))
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = price))
#geom_jitter()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = cut))
#geom_jitter()
# Price Box Plots
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
facet_wrap(~color, nrow=5,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=5,scales="free_y")
# Price Box Plots
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=7,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
tapply(diamonds$price, diamonds$color, summary)
tapply(diamonds$price, diamonds$color, IQR)
ggplot(data=diamonds, aes(factor(color), price/carat))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=7,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price/carat))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly()
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_y_log10()
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=100)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10000)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
summary(diamonds$carat)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly()+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.25)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.5)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
subset(diamonds, diamonds$carat < 2)
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.001)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.005)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
install.packages("knitr")
install.packages("ggplot2")
install.packages('dplyr')
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson3');
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
library('dplyr')
age_groups <- group_by(pf,age)
age_groups
?group_by
by_cyl <- group_by(mtcars, cyl)
summarise(by_cyl, mean(disp), mean(hp))
filter(by_cyl, disp==max(disp))
library('dplyr')
age_groups <- group_by(pf,age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
frined_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
pf.fc_by_age <-  pf %.%
group_by(age) %.%
summarise(friend_count_mean = mean(friend_count),
frined_count_median = median(friend_count),
n = n()) %.%
arrange(age)
head(pf.fc_by_age)
