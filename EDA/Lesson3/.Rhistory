q21 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser)  ~ Algorithm+NNbrs, data=df21, mean)
View(`q21`)
View(`q21`)
ggplot(q21, aes(x=NNbrs, y=RMSE.ByUser, colour=Algorithm)) +geom_line()
ggplot(q21, aes(x=NNbrs, y=RMSE.ByUser, colour=Algorithm)) +geom_line()+geom_point()
View(`q21`)
View(df)
q22 <- aggregate(cbind(RMSE.ByUser, nDCG)  ~ Algorithm+NNbrs, data=df21, mean)
q22
View(df)
aggregate(cbind( DataSet, RMSE.ByUser, nDCG)  ~ Algorithm+NNbrs, data=df21, mean)
q22 <- aggregate(cbind( DataSet, RMSE.ByUser, nDCG)  ~ Algorithm+NNbrs, data=df1, mean)
df1 <- df[df$Algorithm %in% c("CustomItemItem"),]
q11 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser)  ~ Algorithm+NNbrs, data=df21, mean)
ggplot(q11, aes(x=NNbrs, y=RMSE.ByUser, colour=Algorithm)) +geom_line()+geom_point()
#question 3
q22 <- aggregate(cbind( DataSet, RMSE.ByUser, nDCG)  ~ Algorithm+NNbrs, data=df1, mean)
View(`q22`)
View(all.agg)
View(all.data)
q22 <- aggregate(cbind( RMSE.ByUser, nDCG)  ~ Algorithm+NNbrs+DataSet, data=df1, mean)
View(`q22`)
View(`q22`)
ggplot(q22, aes(x=NNbrs, y=RMSE.ByUser, colour=Algorithm+DataSet)) +geom_line()+geom_point()
q22 <- aggregate(cbind( RMSE.ByUser, nDCG)  ~ NNbrs+DataSet, data=df1, mean)
ggplot(q22, aes(x=NNbrs, y=RMSE.ByUser, colour=DataSet)) +geom_line()+geom_point()
ggplot(q22, aes(x=NNbrs, y=nDCG, colour=DataSet))+geom_line()+geom_point()
q22 <- aggregate(cbind( RMSE.ByUser, nDCG)  ~ NNbrs+DataSet, data=df1, mean)
p1 <- ggplot(q22, aes(x=NNbrs, y=RMSE.ByUser, colour=DataSet))+geom_line()+geom_point()
p2 <- ggplot(q22, aes(x=NNbrs, y=nDCG, colour=DataSet))+geom_line()+geom_point()
multiplot(p1, p2, cols=2)
# Create a chart comparing the algorithms
library("ggplot2")
library("grid")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
all.data <- read.csv("~/Coursera/Recommendation/assignments/module6/pa5/ii-assignment/target/analysis/eval-results.csv")
df <-  all.data
all.agg <- aggregate(cbind(Coverage,  RMSE.ByRating,  RMSE.ByUser,	nDCG,	TopN.nDCG)
~ Algorithm+NNbrs,
data=all.data, mean)
#quizz question 1
df1 <- df[df$Algorithm %in% c("CustomItemItem"),]
q11 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser)  ~ Algorithm+NNbrs, data=df21, mean)
ggplot(q11, aes(x=NNbrs, y=RMSE.ByUser, colour=Algorithm)) +geom_line()+geom_point()
#question 3
q22 <- aggregate(cbind( RMSE.ByUser, nDCG)  ~ NNbrs+DataSet, data=df1, mean)
p1 <- ggplot(q22, aes(x=NNbrs, y=RMSE.ByUser, colour=DataSet))+geom_line()+geom_point()
p2 <- ggplot(q22, aes(x=NNbrs, y=nDCG, colour=DataSet))+geom_line()+geom_point()
multiplot(p1, p2, cols=2)
multiplot(p1, p2, rows=2)
# Create a chart comparing the algorithms
library("ggplot2")
library("grid")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
all.data <- read.csv("~/Coursera/Recommendation/assignments/module7/pa6/svd-assignment/target/analysis/eval-results.csv")
View(all.data)
View(all.data)
all.data <- read.csv("~/Coursera/Recommendation/assignments/module7/pa6/svd-assignment/target/analysis/eval-results.csv")
df <-  all.data
all.agg <- aggregate(cbind(RMSE.ByUser,  nDCG)
~ Algorithm,
data=all.data, mean)
View(all.agg)
q11 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser, nDCG, TopN.nDCG)  ~ Algorithm, data=all.data, mean)
View(`q11`)
q11 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser, nDCG, TopN.nDCG)  ~ Algorithm+DataSet, data=all.data, mean)
View(`q11`)
q3 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser, nDCG, TopN.nDCG)  ~ Algorithm+FeatureCount, data=all.data, mean)
ggplot(q3, aes(x=FeatureCount, y=RMSE.ByUser, colour=Algorithm)) +geom_line()+geom_point()
q3 <- aggregate(cbind(RMSE.ByRating,  RMSE.ByUser, nDCG, TopN.nDCG)  ~ Algorithm+FeatureCount, data=all.data, mean)
p1 <- ggplot(q3, aes(x=FeatureCount, y=RMSE.ByUser, colour=Algorithm)) +geom_line()+geom_point()
p2 <- ggplot(q3, aes(x=FeatureCount, y=RMSE.ByRating, colour=Algorithm)) +geom_line()+geom_point()
p3 <- ggplot(q3, aes(x=FeatureCount, y=nDCG, colour=Algorithm)) +geom_line()+geom_point()
p4 <- ggplot(q3, aes(x=FeatureCount, y=TopN.nDCG, colour=Algorithm)) +geom_line()+geom_point()
multiplot(p1, p2,p3,p4, rows=4)
path = '/home/rahim/CoolBlue/s3/urlids.csv'
data = read.csv(path)
View(data)
path = '/home/rahim/CoolBlue/s3/urlids.csv'
data = read.csv(path,colnames=c('url', 'urlcound'))
help read.csv
read.csv ?
;
? read.csv
path = '/home/rahim/CoolBlue/s3/urlids.csv'
data = read.csv(path,col.names=c('url', 'urlcoun'))
View(data)
path = '/home/rahim/CoolBlue/s3/urlids.csv'
data = read.csv(path,col.names=c('url', 'urlcount'))
library(ggplot2)
hist(data$urlcount)
? hist
library(ggplot2)
ggplot(data, aes(x=urlcount)) + geom_histogram(binwidth=.5, colour="black", fill="white")
path = '/home/rahim/CoolBlue/s3/urlids.csv'
data = read.csv(path,col.names=c('url', 'urlcount'))
library(ggplot2)
ggplot(data, aes(x=urlcount)) + geom_histogram(binwidth=100, colour="black", fill="white")
ggplot(data, aes(x=urlcount)) + geom_histogram(binwidth=500, colour="black", fill="white")
path = '/home/rahim/CoolBlue/s3/urlids.csv'
data = read.csv(path,col.names=c('url', 'urlcount'))
library(ggplot2)
ggplot(data, aes(x=urlcount)) + geom_histogram(binwidth=500, colour="black", fill="white")
plot()
clear
cls
clears
clear
getwd()
list.files()
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson3');
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson3');
getwd();
list.files();
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson3');
getwd();
list.files();
pf <- read.csv('pseudo_facebook.tsv', sep="\t");
names(pf)
qplot(x = dob_day, data=pf);
library(ggplot2)
installed.packages('knitr')
library(knitr)
install.packages("knitr")
library(knitr)
qplot(x = dob_day, data=pf) +
scale_x_discrete(break=1:31)
qplot(x = dob_day, data=pf) +
scale_x_discrete(breaks=1:31)
names(pf)
qplot(x = dob_day, data=pf) +
scale_x_discrete(breaks=1:31)+
facet_wrap(~dob_month, ncol=3)
qplot(x = freiend_count, data=pf)
qplot(x = friend_count, data=pf)
max(pf$friend_count)
pf$friend_count.sort()
sort(pf$friend_count)
max(pf$friend_count)
qplot(x = friend_count, data=pf, xlim=c(0,1000))
qplot(x = friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000), breaks=seq(0,1000,50))
names(pf)
qplot(x = friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000), breaks=seq(0,1000,50))+
facet_wrap(~gender)
qplot(x = friend_count, data=subset(pf, !is.na(gender)), binwidth=25)+
scale_x_continuous(limits=c(0,1000), breaks=seq(0,1000,50))+
facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count,pf$gender,summary)
by(pf$friend_count,pf$gender,mean)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
names(pf)
ggplot(aes(x = tenure/360), data = pf) +
geom_histogram(binwidth = 0.5, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/360), data = pf) +
geom_histogram(binwidth = 0.5, color = 'black', fill = '#099DD9')+xlab("Year")
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green')
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green') +
scale_x_continuous(breaks = seq(1, 110, 5), limits = c(0, 110))
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green', bindidth=5) +
scale_x_continuous(breaks = seq(1, 110, 5), limits = c(0, 110)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green', bindidth=5) +
scale_x_continuous(breaks = seq(10, 110, 5), limits = c(10, 110)) +
xlab('Age') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green', bindidth=1) +
scale_x_continuous(breaks = seq(10, 110, 5), limits = c(10, 110)) +
xlab('Age') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green', bindidth=1)
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green', bindidth=1) +
scale_x_continuous(breaks = seq(10, 110, 1), limits = c(10, 110)) +
xlab('Age') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(color = 'black', fill = 'green', binwidth=1) +
scale_x_continuous(breaks = seq(10, 110, 1), limits = c(10, 110)) +
xlab('Age') +
ylab('Number of users in sample')
install.packages("gridExtra")
library(gridExtra)
names(pf)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 5, color = 'black', fill = '#099DD9')
qplot(x = friend_count, data=subset(pf, !is.na(gender)), binwidth=25)+
scale_x_continuous(limits=c(0,1000), breaks=seq(0,1000,50))+
facet_wrap(~gender)
p1 = qplot(x = friend_count, data=subset(pf, !is.na(gender)), binwidth=25)+
scale_x_continuous(limits=c(0,1000), breaks=seq(0,1000,50))
p1
qplot(x = friend_count, data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')
p1 = qplot(x = friend_count, data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,1000))
p1
p2 = qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,1000))
p2
qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')
qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,5))
qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,4))
p2 = qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_log10()
p2
p2 = qplot(x = friend_count, data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_log10()
p2
max(log(pf$friend_count))
max(log(10))
max(log10(10))
p2 = qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,3.001))
p2
qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,4.001))
qplot(x = sqrt(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')
qplot(x = friend_count, data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
log10(50)
qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0900D9', binwidth=1)+
scale_x_continuous(limits=c(0,4.001))
qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0900D9')+
scale_x_continuous(limits=c(0,4.001))
qplot(x = sqrt(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')+
scale_x_continuous(limits=c(0,4.001))
qplot(x = sqrt(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')
p1 = qplot(x = friend_count, data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p2 = qplot(x = log10(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0900D9')+
scale_x_continuous(limits=c(0,4.001))
p3 = qplot(x = sqrt(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')+
scale_x_continuous(limits=c(0,80))
grid(p1,p2,p2, ncol=1)
grid.arrange(p1,p2,p2, ncol=1)
grid.arrange(p1,p2,p3, ncol=1)
p1 = qplot(x = friend_count, data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p2 = qplot(x = log10(friend_count+1), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0900D9')+
scale_x_continuous(limits=c(0,4.001))
p3 = qplot(x = sqrt(friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')+
scale_x_continuous(limits=c(0,80))
grid.arrange(p1,p2,p3, ncol=1)
p11 <- ggplot(aes(x = friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p11
p11 <- ggplot(aes(x = friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p22 = qplot(aes(x = log10(friend_count+1)), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0900D9')+
scale_x_continuous(limits=c(0,4.001))
p33 = ggplot(aes(x = sqrt(friend_count)), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')+
scale_x_continuous(limits=c(0,80))
grid.arrange(p11,p22,p33, ncol=1)
p11 <- ggplot(aes(x = friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p22 <- qplot(aes(x = log10(friend_count+1)), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0900D9')+
scale_x_continuous(limits=c(0,4.001))
p33 <- ggplot(aes(x = sqrt(friend_count)), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0090D9')+
scale_x_continuous(limits=c(0,80))
grid.arrange(p11,p22,p33, ncol=1)
p11 <- ggplot(aes(x = friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p22 <- p11+ scale_x_log10()
p33 <- p11+ scale_x_sqrt()
grid.arrange(p11,p22,p33, ncol=1)
p11 <- ggplot(aes(x = friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(0,1000))
p11 <- ggplot(aes(x = friend_count), data=subset(pf, !is.na(gender)))+
geom_histogram(color='black', fill='#0990D9')+
scale_x_continuous(limits=c(0,1000))
p22 <- p11+ scale_x_log10()
p33 <- p11+ scale_x_sqrt()
grid.arrange(p11,p22,p33, ncol=1)
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
#freqplot
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(350, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
names(pf)
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(350, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
summary(pf$www_likes)
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(0, 15000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(0, 15000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender)))
library(ggplot2)
library(knitr)
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson3');
getwd();
list.files();
pf <- read.csv('pseudo_facebook.tsv', sep="\t");
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(0, 15000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
# scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 50)) +
scale_x_log10()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=50) +
# scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 50)) +
scale_x_log10()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
?geom_freqpoly
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 50)) +
#scale_x_log10()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 50)) +
scale_y_log()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 50)) +
scale_y_log10()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 15500), breaks = seq(0, 1000, 50)) +
scale_y_log10()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_y_log10()+
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y=friend_count, data =subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y=friend_count, data =subset(pf, !is.na(gender)),
geom = 'boxplot')+scale_y_continuous(lim=c(0,1000))
qplot(x = gender, y=friend_count, data =subset(pf, !is.na(gender)),
geom = 'boxplot')+ coord_cartesian(ylim=c(0,1000))
qplot(x = gender, y=friend_count, data =subset(pf, !is.na(gender)),
geom = 'boxplot')+scale_y_continuous(lim=c(0,1000))
qplot(x = gender, y=friend_count, data =subset(pf, !is.na(gender)),
geom = 'boxplot')+ coord_cartesian(ylim=c(0,1000))
qplot(x = gender, y=friend_count, data =subset(pf, !is.na(gender)),
geom = 'boxplot')+ coord_cartesian(ylim=c(0,250))
by(pf$friend_count, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0 )
pf$mobile_likes > 0
pf$mobile_check_in <- ifelse(pf$mobile_likes >0 , 1)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0 )
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes >0 , 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
pf$mobile_check_in
summary(pf$mobile_check_in)
s <- summary(pf$mobile_check_in)
s
s[1]
s[1]/sum(s)
100*s[1]/sum(s)
round(100*s[1]/sum(s),2 )
names(pf)
round(100*sum(s[1])/sum(s),2 )
sum(pf$mobile_check_in==1)
s
round(100*s[2]/sum(s),2 )
