ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=500)+
scale_x_continuous()
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous()
ph
summary(diamonds$price)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
min(diamonds4price)
min(diamonds$price)
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(300,10000))
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(325,))
ph
max(diamonds$price)
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(325,18825))
ph
min(diamonds$price)
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(326,18825))
ph
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))
ph
sum(diamonds$price >= 15000)
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1250))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(500,1250))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1250))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=1)+
scale_x_continuous(limits=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=2)+
scale_x_continuous(limits=c(300,100))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,100))
ggplot(aes(x = price), data=diamonds)
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,100))
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
#what color represents the best diamonds based on price
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(300,10000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(lim=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(lim=c(300,100))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=10)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=1)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(300,1000))
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(400,1000))
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(400,1100))
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_grid(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_grid(~cut, ncol=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
library(ggplot2)
library(stats)
library(knitr)
dim(diamonds)
#show the list of types for each column
lapply(diamonds,class)
#what color represents the best diamonds based on price
qplot(x = color, y=price, data =subset(diamonds, !is.na(color)),
geom = 'boxplot')+scale_y_continuous(lim=c(300,10000))
#price histogram
ph <- ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))
ph
summary(diamonds$price)
## Diamond counts
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
#cheaper diamonds
ggplot(aes(x = price), data=diamonds)+
geom_histogram(color='black', fill='#0990D9', binwidth=5)+
scale_x_continuous(limits=c(400,1100))
#price by cut hist
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
names(diamonds)
max(diamonds$price)
max(diamonds$price, by = diamonds$cut)
?by
by(diamonds, cut, max)
by(diamonds, cut, max)
by(diamonds, diamonds$cut, max)
by(diamonds, cut, max)
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
rep(1:3, length = n
rep(1:3, length = n)
rep(1:3, length = n)
factor(rep(1:3, length = n), levels = 1:5)
factor(rep(1:3, length = n), levels = 1:2)
table(fac)
tapply(1:n, fac, sum)
#cheaper diamonds
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
tapply(1:3, ind) #-> the split vector
tapply(1:3, ind, sum)
ind
ind[[1]]
ind[[1]][1]
table(ind)
tapply(1:3, ind)
by(as.factor(diamonds$cut), diamonds$price, max)
tapply(diamonds$price, diamonds$cut, max)
names(diamonds)
tapply(diamonds$price, diamonds$cut+diamonds$color, max)
tapply(diamonds$price,c(diamonds$cut,diamonds$color), max)
?by
by(diamonds$price, diamonds$cut, max)
tapply(diamonds$price, diamonds$cut, max)
tapply(diamonds$price, diamonds$cut, min)
tapply(diamonds$price, diamonds$cut, median)
min(tapply(diamonds$price, diamonds$cut, median))
min(by(diamonds$price, diamonds$cut, median))
class(tapply(diamonds$price, diamonds$cut, median))
m<- tapply(diamonds$price, diamonds$cut, median)
m[1]
m[1].value
str(m[1])
class(m[1])
names(m[1])
m[m=min(m)]
min(m)
m[m==min(m)]
m <- tapply(diamonds$price, diamonds$cut, median)
m[m==min(m)]
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale=free)+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale="free")+
scale_x_continuous(limits=c(300,18825))+
# facet_wrap(~cut, nrow=5)
facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scale_y="free")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales_y="free")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
#facet_grid(~cut)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
#scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250, scales="free_y")+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5)
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=50)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=4,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")+
theme(strip.text.x = element_text(size=8, angle=75),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
ggplot(aes(x = price), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")+
theme(strip.text.x = element_text(size=8, angle=0),
strip.text.y = element_text(size=12, face="bold"),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
#scale_x_continuous(limits=c(300,18825))+
scale_x_log10()+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
#scale_x_continuous(limits=c(300,18825))+
scale_x_log10()
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)
ggplot(aes(x = price/carat), data=diamonds, )+
geom_histogram(color='black', fill='#0990D9', binwidth=250)+
scale_x_continuous(limits=c(300,18825))+
#scale_x_log10()+
facet_wrap(~cut, nrow=5,scales="free_y")
ggplot(aes(x = price), data=diamonds, )+
geom_boxplot()
ggplot(aes(y = price), data=diamonds, )+
geom_boxplot()
?geom_boxplot
ggplot(aes(price), data=diamonds, )+
geom_boxplot()
?geom_boxplot
ggplot(data=diamonds, aes(factor(cut)), price  )+
geom_boxplot()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot()+
geom_jitter()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T)
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "green", outlier.size = 3)
# Price Box Plots
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3)
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,color=aes(fill = cyl))
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,colour=aes(fill = cyl))
#geom_jitter()
# Price Box Plots
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = cyl))
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = price))
#geom_jitter()
ggplot(data=diamonds, aes(factor(cut), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = cut))
#geom_jitter()
# Price Box Plots
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
facet_wrap(~color, nrow=5,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=5,scales="free_y")
# Price Box Plots
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=7,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
tapply(diamonds$price, diamonds$color, summary)
tapply(diamonds$price, diamonds$color, IQR)
ggplot(data=diamonds, aes(factor(color), price/carat))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))+
facet_wrap(~color, nrow=7,scales="free_y")
ggplot(data=diamonds, aes(factor(color), price/carat))+
geom_boxplot(notch= T,  outlier.colour = "#0990D9", outlier.size = 3,aes(fill = color))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly()
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
scale_y_log10()
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=100)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=10000)+
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
summary(diamonds$carat)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly()+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.25)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.5)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
subset(diamonds, diamonds$carat < 2)
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.001)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.2))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
# Carat Frequency Polygon
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.005)+
scale_x_continuous(limits = c(0, 5.01), breaks = seq(0, 5.01, 0.1))
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson4');
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf
setwd('/home/rahim/DelGitGub/UdaCity/EDA/Lesson4');
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
ggplot(aes(x = gender, y=age),
data=subset(pf,!is.na(gender)))+geom_boxplot()
ggplot(aes(x = gender, y=age),
data=subset(pf,!is.na(gender)))+geom_boxplot()+
stat_summary(fun, y = mean, geom='point', shape=4)
ggplot(aes(x = gender, y=age),
data=subset(pf,!is.na(gender)))+geom_boxplot()+
stat_summary(fun.y = mean, geom='point', shape=4)
suppressMessages(library(dplyr))
?group_by
names(pf)
suppressMessages(library(dplyr))
age_gender_groups <- group_by(pf, age, gender)
pf.fc_by_age_gender <- summarise(age_gender_groups,
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf.fc_by_age_gender
age_gender_groups <- group_by(subset(pf, !is.na(gender)), age, gender)
pf.fc_by_age_gender <- summarise(age_gender_groups,
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
ggplot(aes(x=age, y=median_friend_count), data=pf.fc_by_age_gender)+
geom_line(color=gender)
pf.fc_by_age_gender
ggplot(aes(x=age, y=median_friend_count), data=pf.fc_by_age_gender)+
geom_line(color=pf.fc_by_age_gender$gender)
ggplot(aes(x=age, y=median_friend_count), data=pf.fc_by_age_gender)+
geom_line()
#Plotting Conditional Summaries
ggplot(aes(x=age, y=median_friend_count), data=pf.fc_by_age_gender)+
geom_line(aes(color = gender))
install.packages('reshape2')
library(reshape2)
install.packages("reshape2")
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
View(pf.fc_by_age_gender.wide)
fix(pf.fc_by_age_gender)
View(pf.fc_by_age_gender)
ggplot(aes(x= male, y = female), data = pf.fc_by_age_gender.wide)+
geom_point()
library(ggplot2)
ggplot(aes(x= male, y = female), data = pf.fc_by_age_gender.wide)+
geom_point()
?geom_hline
ggplot(aes(x= male, y = female), data = pf.fc_by_age_gender.wide)+
geom_point()+
geom_hline(aes(yintercept=1), colour='red', linetype=2)
ggplot(aes(x= female/male, y=age), data = pf.fc_by_age_gender.wide)+
geom_point()+
geom_hline(aes(yintercept=1), colour='red', linetype=2)
ggplot(aes(x= male/female, y=age), data = pf.fc_by_age_gender.wide)+
geom_point()+
geom_hline(aes(yintercept=1), colour='red', linetype=2)
ggplot(aes(y= male/female, x=age), data = pf.fc_by_age_gender.wide)+
geom_point()+
geom_hline(aes(yintercept=1), colour='red', linetype=2)
ggplot(aes(y= female/male, x=age), data = pf.fc_by_age_gender.wide)+
geom_point()+
geom_hline(aes(yintercept=1), colour='red', linetype=2)
names(pf)
head(pf$tenure)
head(pf$tenure %% 365)
head(pf$tenure / 365)
floor(head(pf$tenure / 365))
2014-(floor(head(pf$tenure / 365))+1)
pf$year_joined <- 2014-(floor(head(pf$tenure / 365))+1)
pf$year_joined <- 2014-(floor((pf$tenure / 365))+1)
pf$year_joined
pf$tenure
pf$tenure==0
sum(pf$tenure==0)
sort(pf$tenure)
pf$year_joined <- 2014-(ceiling((pf$tenure / 365)))
pf$year_joined <- 2014-(ceiling((pf$tenure / 365)))
?cut
cut(pf$year_joined, breaks = c(2009,2011,2012,2014), right=T)
table(pf.year_joined.bucket)
pf.year_joined.bucket <- cut(pf$year_joined, breaks = c(2009,2011,2012,2014), right=T)
table(pf.year_joined.bucket)
pf.year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014), right=T)
table(pf.year_joined.bucket)
pf.year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014), right=F)
table(pf.year_joined.bucket)
pf.year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014), right=T)
table(pf.year_joined.bucket)
sum(pf$year_joined <=2009)
count(pf$year_joined <=2009)
sum(T)
pf.year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014), right=T)
pf$year_joined <- 2014-(ceiling((pf$tenure / 365)))
pf.year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014), right=T)
table(pf.year_joined.bucket)
table(pf.year_joined.bucket)
pf$year_joined
count(pf$year_joined <=2009)
sum(pf$year_joined <=2009)
